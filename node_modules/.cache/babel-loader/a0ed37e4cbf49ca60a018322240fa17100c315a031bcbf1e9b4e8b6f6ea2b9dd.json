{"ast":null,"code":"var _jsxFileName = \"/Users/saulius/Desktop/TOP/projects/react-learning/src/UpdaterFunctions.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function UpdaterFunctionEx() {\n  _s();\n  const [number, setNumber] = useState(0);\n  function handleNumber() {\n    //updater function\n    //it adds its result to the queue\n    //and also takes values from the queue\n\n    setNumber(n => n + 1);\n    setNumber(n => n + 1);\n    setNumber(n => n + 1);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [number, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNumber,\n      children: \"+3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(UpdaterFunctionEx, \"G5PFX1wnjBJODPcJAktOglW1raM=\");\n_c = UpdaterFunctionEx;\nexport function NormalThenUpdater() {\n  _s2();\n  const [number, setNumber] = useState(0);\n  function handleNumber() {\n    //normal function\n    //it ingores whats already in queue\n    //and ads number + addValue to the queue\n    setNumber(number + 2);\n\n    //updater function takes whats in queue\n    //and adds new result to que\n    setNumber(n => n + 1);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [number, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNumber,\n      children: \"+3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s2(NormalThenUpdater, \"G5PFX1wnjBJODPcJAktOglW1raM=\");\n_c2 = NormalThenUpdater;\nexport function UpdaterThenNormal() {\n  _s3();\n  const [number, setNumber] = useState(0);\n  function handleNumber() {\n    //updater function takes whats in queue\n    //and adds new result to que\n    setNumber(n => n + 1);\n\n    //normal function\n    //it ingores whats already in queue\n    //and ads number + addValue to the queue\n    setNumber(number + 2);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [number, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNumber,\n      children: \"+3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s3(UpdaterThenNormal, \"G5PFX1wnjBJODPcJAktOglW1raM=\");\n_c3 = UpdaterThenNormal;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"UpdaterFunctionEx\");\n$RefreshReg$(_c2, \"NormalThenUpdater\");\n$RefreshReg$(_c3, \"UpdaterThenNormal\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","UpdaterFunctionEx","_s","number","setNumber","handleNumber","n","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","NormalThenUpdater","_s2","_c2","UpdaterThenNormal","_s3","_c3","$RefreshReg$"],"sources":["/Users/saulius/Desktop/TOP/projects/react-learning/src/UpdaterFunctions.js"],"sourcesContent":["import { useState } from \"react\";\n\nexport function UpdaterFunctionEx() {\n  const [number, setNumber] = useState(0);\n\n  function handleNumber() {\n    //updater function\n    //it adds its result to the queue\n    //and also takes values from the queue\n\n    setNumber((n) => n + 1);\n    setNumber((n) => n + 1);\n    setNumber((n) => n + 1);\n  }\n\n  return (\n    <>\n      {number}\n      <button onClick={handleNumber}>+3</button>\n    </>\n  );\n}\nexport function NormalThenUpdater() {\n  const [number, setNumber] = useState(0);\n  function handleNumber() {\n    //normal function\n    //it ingores whats already in queue\n    //and ads number + addValue to the queue\n    setNumber(number + 2);\n\n    //updater function takes whats in queue\n    //and adds new result to que\n    setNumber((n) => n + 1);\n  }\n\n  return (\n    <>\n      {number}\n      <button onClick={handleNumber}>+3</button>\n    </>\n  );\n}\nexport function UpdaterThenNormal() {\n  const [number, setNumber] = useState(0);\n  function handleNumber() {\n    //updater function takes whats in queue\n    //and adds new result to que\n    setNumber((n) => n + 1);\n\n    //normal function\n    //it ingores whats already in queue\n    //and ads number + addValue to the queue\n    setNumber(number + 2);\n  }\n\n  return (\n    <>\n      {number}\n      <button onClick={handleNumber}>+3</button>\n    </>\n  );\n}\n"],"mappings":";;;;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjC,OAAO,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAEvC,SAASS,YAAYA,CAAA,EAAG;IACtB;IACA;IACA;;IAEAD,SAAS,CAAEE,CAAC,IAAKA,CAAC,GAAG,CAAC,CAAC;IACvBF,SAAS,CAAEE,CAAC,IAAKA,CAAC,GAAG,CAAC,CAAC;IACvBF,SAAS,CAAEE,CAAC,IAAKA,CAAC,GAAG,CAAC,CAAC;EACzB;EAEA,oBACER,OAAA,CAAAE,SAAA;IAAAO,QAAA,GACGJ,MAAM,eACPL,OAAA;MAAQU,OAAO,EAAEH,YAAa;MAAAE,QAAA,EAAC;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eAC1C,CAAC;AAEP;AAACV,EAAA,CAnBeD,iBAAiB;AAAAY,EAAA,GAAjBZ,iBAAiB;AAoBjC,OAAO,SAASa,iBAAiBA,CAAA,EAAG;EAAAC,GAAA;EAClC,MAAM,CAACZ,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACvC,SAASS,YAAYA,CAAA,EAAG;IACtB;IACA;IACA;IACAD,SAAS,CAACD,MAAM,GAAG,CAAC,CAAC;;IAErB;IACA;IACAC,SAAS,CAAEE,CAAC,IAAKA,CAAC,GAAG,CAAC,CAAC;EACzB;EAEA,oBACER,OAAA,CAAAE,SAAA;IAAAO,QAAA,GACGJ,MAAM,eACPL,OAAA;MAAQU,OAAO,EAAEH,YAAa;MAAAE,QAAA,EAAC;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eAC1C,CAAC;AAEP;AAACG,GAAA,CAnBeD,iBAAiB;AAAAE,GAAA,GAAjBF,iBAAiB;AAoBjC,OAAO,SAASG,iBAAiBA,CAAA,EAAG;EAAAC,GAAA;EAClC,MAAM,CAACf,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACvC,SAASS,YAAYA,CAAA,EAAG;IACtB;IACA;IACAD,SAAS,CAAEE,CAAC,IAAKA,CAAC,GAAG,CAAC,CAAC;;IAEvB;IACA;IACA;IACAF,SAAS,CAACD,MAAM,GAAG,CAAC,CAAC;EACvB;EAEA,oBACEL,OAAA,CAAAE,SAAA;IAAAO,QAAA,GACGJ,MAAM,eACPL,OAAA;MAAQU,OAAO,EAAEH,YAAa;MAAAE,QAAA,EAAC;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eAC1C,CAAC;AAEP;AAACM,GAAA,CAnBeD,iBAAiB;AAAAE,GAAA,GAAjBF,iBAAiB;AAAA,IAAAJ,EAAA,EAAAG,GAAA,EAAAG,GAAA;AAAAC,YAAA,CAAAP,EAAA;AAAAO,YAAA,CAAAJ,GAAA;AAAAI,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}