{"ast":null,"code":"var _jsxFileName = \"/Users/saulius/Desktop/TOP/projects/react-learning/src/WeatherApp.js\",\n  _s = $RefreshSig$();\n//needs a statefor location\n//button trigger will trigger the fetching of data from weather api\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function WeatherApp() {\n  _s();\n  const [location, setLocation] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"loaction\",\n        children: [\"Location: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"loaction\",\n          onChange: event => {\n            setLocation(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: () => requesWeatherData(location),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_s(WeatherApp, \"JMkk70NnkYHwacJIVl+G29lh6iI=\");\n_c = WeatherApp;\nasync function requesWeatherData(location) {\n  let apiKey = \"c4332bbbf71b419ab07121955241403\";\n  let url = \"https://api.weatherapi.com/v1/current.json\";\n  let fetchUrl = `${url}?key=${apiKey}&q=${location}`;\n  try {\n    //we want our url with the api-key and insert the loaction\n    //we fetch that url and add wait\n\n    let response = await fetch(fetchUrl, {\n      mode: \"cors\"\n    });\n    let weatherData = await response.json();\n    console.log(moreData);\n  } catch (error) {}\n}\nvar _c;\n$RefreshReg$(_c, \"WeatherApp\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","WeatherApp","_s","location","setLocation","children","className","htmlFor","id","onChange","event","target","value","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","requesWeatherData","_c","apiKey","url","fetchUrl","response","fetch","mode","weatherData","json","console","log","moreData","error","$RefreshReg$"],"sources":["/Users/saulius/Desktop/TOP/projects/react-learning/src/WeatherApp.js"],"sourcesContent":["//needs a statefor location\n//button trigger will trigger the fetching of data from weather api\n\nimport { useState } from \"react\";\n\nexport function WeatherApp() {\n  const [location, setLocation] = useState(\"\");\n\n  return (\n    <div>\n      <div className=\"searchbar\">\n        <label htmlFor={\"loaction\"}>\n          {\"Location: \"}\n          <input\n            id=\"loaction\"\n            onChange={(event) => {\n              setLocation(event.target.value);\n            }}\n          />\n        </label>\n        <button type=\"submit\" onClick={() => requesWeatherData(location)}>\n          Submit\n        </button>\n      </div>\n      <div></div>\n    </div>\n  );\n}\n\nasync function requesWeatherData(location) {\n  let apiKey = \"c4332bbbf71b419ab07121955241403\";\n  let url = \"https://api.weatherapi.com/v1/current.json\";\n  let fetchUrl = `${url}?key=${apiKey}&q=${location}`;\n  try {\n    //we want our url with the api-key and insert the loaction\n    //we fetch that url and add wait\n\n    let response = await fetch(fetchUrl, { mode: \"cors\" });\n    let weatherData = await response.json();\n    console.log(moreData);\n  } catch (error) {}\n}\n"],"mappings":";;AAAA;AACA;;AAEA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,OAAO,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE5C,oBACEE,OAAA;IAAAK,QAAA,gBACEL,OAAA;MAAKM,SAAS,EAAC,WAAW;MAAAD,QAAA,gBACxBL,OAAA;QAAOO,OAAO,EAAE,UAAW;QAAAF,QAAA,GACxB,YAAY,eACbL,OAAA;UACEQ,EAAE,EAAC,UAAU;UACbC,QAAQ,EAAGC,KAAK,IAAK;YACnBN,WAAW,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;UACjC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACRhB,OAAA;QAAQiB,IAAI,EAAC,QAAQ;QAACC,OAAO,EAAEA,CAAA,KAAMC,iBAAiB,CAAChB,QAAQ,CAAE;QAAAE,QAAA,EAAC;MAElE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNhB,OAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV;AAACd,EAAA,CAtBeD,UAAU;AAAAmB,EAAA,GAAVnB,UAAU;AAwB1B,eAAekB,iBAAiBA,CAAChB,QAAQ,EAAE;EACzC,IAAIkB,MAAM,GAAG,iCAAiC;EAC9C,IAAIC,GAAG,GAAG,4CAA4C;EACtD,IAAIC,QAAQ,GAAI,GAAED,GAAI,QAAOD,MAAO,MAAKlB,QAAS,EAAC;EACnD,IAAI;IACF;IACA;;IAEA,IAAIqB,QAAQ,GAAG,MAAMC,KAAK,CAACF,QAAQ,EAAE;MAAEG,IAAI,EAAE;IAAO,CAAC,CAAC;IACtD,IAAIC,WAAW,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;IACvCC,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EACvB,CAAC,CAAC,OAAOC,KAAK,EAAE,CAAC;AACnB;AAAC,IAAAZ,EAAA;AAAAa,YAAA,CAAAb,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}