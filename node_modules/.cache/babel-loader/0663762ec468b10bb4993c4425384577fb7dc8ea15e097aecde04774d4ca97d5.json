{"ast":null,"code":"var _jsxFileName = \"/Users/saulius/Desktop/TOP/projects/react-learning/src/WeatherApp.js\",\n  _s = $RefreshSig$();\n//needs a statefor location\n//button trigger will trigger the fetching of data from weather api\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function WeatherApp() {\n  _s();\n  const [location, setLocation] = useState(\"\");\n  const [weatherData, setWeatherData] = useState({});\n  async function handleWeatherRequest(location) {\n    let response = await requesWeatherData(location);\n    setWeatherData(response);\n    //while thedata is loading make a spinner\n    //then make a funiton that will display the data\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"loaction\",\n        children: [\"Location: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"loaction\",\n          onChange: event => {\n            setLocation(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: () => handleWeatherRequest(location),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(WeatherApp, \"/1nB+kQByU21TKsNoafrNzon6CM=\");\n_c = WeatherApp;\nasync function requesWeatherData(location) {\n  let apiKey = \"c4332bbbf71b419ab07121955241403\";\n  let url = \"https://api.weatherapi.com/v1/current.json\";\n  let fetchUrl = `${url}?key=${apiKey}&q=${location}`;\n  try {\n    let response = await fetch(fetchUrl, {\n      mode: \"cors\"\n    });\n    let weatherData = await response.json();\n    return [weatherData, true];\n  } catch (error) {\n    console.log(\"Error: \" + error);\n    return false;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"WeatherApp\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","WeatherApp","_s","location","setLocation","weatherData","setWeatherData","handleWeatherRequest","response","requesWeatherData","children","className","htmlFor","id","onChange","event","target","value","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","apiKey","url","fetchUrl","fetch","mode","json","error","console","log","$RefreshReg$"],"sources":["/Users/saulius/Desktop/TOP/projects/react-learning/src/WeatherApp.js"],"sourcesContent":["//needs a statefor location\n//button trigger will trigger the fetching of data from weather api\n\nimport { useState } from \"react\";\n\nexport function WeatherApp() {\n  const [location, setLocation] = useState(\"\");\n  const [weatherData, setWeatherData] = useState({});\n\n  async function handleWeatherRequest(location) {\n    let response = await requesWeatherData(location);\n    setWeatherData(response);\n    //while thedata is loading make a spinner\n    //then make a funiton that will display the data\n  }\n\n  return (\n    <div>\n      <div className=\"searchbar\">\n        <label htmlFor={\"loaction\"}>\n          {\"Location: \"}\n          <input\n            id=\"loaction\"\n            onChange={(event) => {\n              setLocation(event.target.value);\n            }}\n          />\n        </label>\n        <button type=\"submit\" onClick={() => handleWeatherRequest(location)}>\n          Submit\n        </button>\n      </div>\n      <div></div>\n    </div>\n  );\n}\n\nasync function requesWeatherData(location) {\n  let apiKey = \"c4332bbbf71b419ab07121955241403\";\n  let url = \"https://api.weatherapi.com/v1/current.json\";\n  let fetchUrl = `${url}?key=${apiKey}&q=${location}`;\n  try {\n    let response = await fetch(fetchUrl, { mode: \"cors\" });\n    let weatherData = await response.json();\n    return [weatherData, true];\n  } catch (error) {\n    console.log(\"Error: \" + error);\n    return false;\n  }\n}\n"],"mappings":";;AAAA;AACA;;AAEA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,OAAO,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EAElD,eAAeS,oBAAoBA,CAACJ,QAAQ,EAAE;IAC5C,IAAIK,QAAQ,GAAG,MAAMC,iBAAiB,CAACN,QAAQ,CAAC;IAChDG,cAAc,CAACE,QAAQ,CAAC;IACxB;IACA;EACF;EAEA,oBACER,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAKW,SAAS,EAAC,WAAW;MAAAD,QAAA,gBACxBV,OAAA;QAAOY,OAAO,EAAE,UAAW;QAAAF,QAAA,GACxB,YAAY,eACbV,OAAA;UACEa,EAAE,EAAC,UAAU;UACbC,QAAQ,EAAGC,KAAK,IAAK;YACnBX,WAAW,CAACW,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;UACjC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACRrB,OAAA;QAAQsB,IAAI,EAAC,QAAQ;QAACC,OAAO,EAAEA,CAAA,KAAMhB,oBAAoB,CAACJ,QAAQ,CAAE;QAAAO,QAAA,EAAC;MAErE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNrB,OAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV;AAACnB,EAAA,CA9BeD,UAAU;AAAAuB,EAAA,GAAVvB,UAAU;AAgC1B,eAAeQ,iBAAiBA,CAACN,QAAQ,EAAE;EACzC,IAAIsB,MAAM,GAAG,iCAAiC;EAC9C,IAAIC,GAAG,GAAG,4CAA4C;EACtD,IAAIC,QAAQ,GAAI,GAAED,GAAI,QAAOD,MAAO,MAAKtB,QAAS,EAAC;EACnD,IAAI;IACF,IAAIK,QAAQ,GAAG,MAAMoB,KAAK,CAACD,QAAQ,EAAE;MAAEE,IAAI,EAAE;IAAO,CAAC,CAAC;IACtD,IAAIxB,WAAW,GAAG,MAAMG,QAAQ,CAACsB,IAAI,CAAC,CAAC;IACvC,OAAO,CAACzB,WAAW,EAAE,IAAI,CAAC;EAC5B,CAAC,CAAC,OAAO0B,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGF,KAAK,CAAC;IAC9B,OAAO,KAAK;EACd;AACF;AAAC,IAAAP,EAAA;AAAAU,YAAA,CAAAV,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}