{"ast":null,"code":"var _jsxFileName = \"/Users/saulius/Desktop/TOP/random/react-tutorial/src/Profile.js\";\nimport Avatar from \"./Avatar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Profile({\n  person,\n  size\n}) {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: person.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n        person: person,\n        size: size\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Recognitions, {\n        recognitionList: person.recognitions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = Profile;\nfunction Card({\n  children\n}) {\n  /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"profile\",\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 3\n  }, this);\n}\n_c2 = Card;\nfunction Recognitions({\n  recognitionArray\n}) {\n  const itemList = recognitionArray.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      children: item.title.charAt(0).toUpperCase() + item.slice(1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), item.description]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: itemList\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n}\n\n// img is avatar needs person(name,imgurl) and size\n// section is card, needs person(profession,award,discovered)\n_c3 = Recognitions;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Profile\");\n$RefreshReg$(_c2, \"Card\");\n$RefreshReg$(_c3, \"Recognitions\");","map":{"version":3,"names":["Avatar","jsxDEV","_jsxDEV","Fragment","_Fragment","Profile","person","size","Card","children","name","fileName","_jsxFileName","lineNumber","columnNumber","Recognitions","recognitionList","recognitions","_c","className","_c2","recognitionArray","itemList","map","item","title","charAt","toUpperCase","slice","description","_c3","$RefreshReg$"],"sources":["/Users/saulius/Desktop/TOP/random/react-tutorial/src/Profile.js"],"sourcesContent":["import Avatar from \"./Avatar\";\n\nexport default function Profile({ person, size }) {\n  return (\n    <Card>\n      <>\n        <h2>{person.name}</h2>\n        <Avatar person={person} size={size} />\n        <Recognitions recognitionList={person.recognitions} />\n      </>\n    </Card>\n  );\n}\n\nfunction Card({ children }) {\n  <section className=\"profile\">{children}</section>;\n}\n\nfunction Recognitions({ recognitionArray }) {\n  const itemList = recognitionArray.map((item) => (\n    <li>\n      <b>{item.title.charAt(0).toUpperCase() + item.slice(1)}</b>\n      {item.description}\n    </li>\n  ));\n  return <ul>{itemList}</ul>;\n}\n\n// img is avatar needs person(name,imgurl) and size\n// section is card, needs person(profession,award,discovered)\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9B,eAAe,SAASC,OAAOA,CAAC;EAAEC,MAAM;EAAEC;AAAK,CAAC,EAAE;EAChD,oBACEL,OAAA,CAACM,IAAI;IAAAC,QAAA,eACHP,OAAA,CAAAE,SAAA;MAAAK,QAAA,gBACEP,OAAA;QAAAO,QAAA,EAAKH,MAAM,CAACI;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACtBZ,OAAA,CAACF,MAAM;QAACM,MAAM,EAAEA,MAAO;QAACC,IAAI,EAAEA;MAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtCZ,OAAA,CAACa,YAAY;QAACC,eAAe,EAAEV,MAAM,CAACW;MAAa;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eACtD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEX;AAACI,EAAA,GAVuBb,OAAO;AAY/B,SAASG,IAAIA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAC1B,aAAAP,OAAA;IAASiB,SAAS,EAAC,SAAS;IAAAV,QAAA,EAAEA;EAAQ;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAU,CAAC;AACnD;AAACM,GAAA,GAFQZ,IAAI;AAIb,SAASO,YAAYA,CAAC;EAAEM;AAAiB,CAAC,EAAE;EAC1C,MAAMC,QAAQ,GAAGD,gBAAgB,CAACE,GAAG,CAAEC,IAAI,iBACzCtB,OAAA;IAAAO,QAAA,gBACEP,OAAA;MAAAO,QAAA,EAAIe,IAAI,CAACC,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGH,IAAI,CAACI,KAAK,CAAC,CAAC;IAAC;MAAAjB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC1DU,IAAI,CAACK,WAAW;EAAA;IAAAlB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CACL,CAAC;EACF,oBAAOZ,OAAA;IAAAO,QAAA,EAAKa;EAAQ;IAAAX,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAC5B;;AAEA;AACA;AAAAgB,GAAA,GAXSf,YAAY;AAAA,IAAAG,EAAA,EAAAE,GAAA,EAAAU,GAAA;AAAAC,YAAA,CAAAb,EAAA;AAAAa,YAAA,CAAAX,GAAA;AAAAW,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}